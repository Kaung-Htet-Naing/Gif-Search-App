{"version":3,"sources":["arrowRight.svg","arrowLeft.svg","reset.svg","Enter.svg","Search.js","Giftrending.js","GIF.js","App.js","index.js"],"names":["Search","search","setSearch","fetchData","setTitle","className","onSubmit","e","preventDefault","type","value","onChange","target","src","Enter","alt","fetchTrending","limit","offset","setOffset","setTrending","setData","setLoader","setTotalCount","content","setTrendSearch","title","a","URL","process","axios","fetchGif","fetchRes","status","data","pagination","total_count","Gif","useState","loader","totalCount","trending","total","useEffect","onTop","window","scrollTo","top","left","behavior","handleNext","handlePrev","length","map","g","index","onClick","url","xhr","XMLHttpRequest","open","responseType","onload","imageUrl","webkitURL","createObjectURL","this","response","tag","document","createElement","href","download","charAt","toUpperCase","slice","body","appendChild","click","removeChild","send","handleDownload","images","fixed_height","fixed_width","id","style","textDecoration","color","Reset","Right","Left","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.12c9afba.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/arrowRight.6b96663a.svg\";","export default __webpack_public_path__ + \"static/media/arrowLeft.7f97f7ce.svg\";","export default __webpack_public_path__ + \"static/media/reset.36c212de.svg\";","export default __webpack_public_path__ + \"static/media/Enter.7f97f7ce.svg\";","import React from 'react';\nimport Enter from './Enter.svg';\n\nexport function Search({ search, setSearch, fetchData, setTitle }) {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setTitle(search);\n    fetchData(search);\n    setSearch('');\n  };\n  return (\n    <div>\n      <form className='gif-search' onSubmit={handleSubmit}>\n        <input type='text' value={search} onChange={(e) => setSearch(e.target.value)} />\n        <button className='gif-btn-submit' type='submit'>\n          <img className='svg' src={Enter} alt='enter' />\n        </button>\n      </form>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nexport const fetchTrending = async (\n  limit,\n  offset,\n  setOffset,\n  setTrending,\n  setData,\n  setLoader,\n  setTotalCount,\n  content,\n  setTrendSearch,\n  title,\n  setTitle\n) => {\n  try {\n    let URL = `https://api.giphy.com/v1/gifs/trending?&api_key=${process.env.REACT_APP_API_KEY}&limit=${limit}&offset=${offset}`;\n    let fetchGif = await axios(URL);\n    let fetchRes = await fetchGif;\n    if (fetchRes.status === 200) {\n      setData(fetchRes.data.data);\n      setTotalCount(fetchRes.data.pagination.total_count);\n      setLoader(false);\n      setTrending(true);\n      if (title !== 'Trending') {\n        setTitle('Trending');\n        if (offset > 0) {\n          setOffset(0);\n        }\n      }\n      content();\n      setTrendSearch(false);\n    }\n  } catch (error) {\n    if (error) throw error;\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Right from './arrowRight.svg';\nimport Left from './arrowLeft.svg';\nimport Reset from './reset.svg';\nimport { Search } from './Search';\nimport { fetchTrending } from './Giftrending';\n\nconst Gif = () => {\n  const [data, setData] = useState([]);\n  const [title, setTitle] = useState('Gif');\n  const [loader, setLoader] = useState(true);\n  const [offset, setOffset] = useState(0);\n  const [limit, setLimit] = useState(40);\n  const [totalCount, setTotalCount] = useState(0);\n  const [search, setSearch] = useState('');\n  const [trending, setTrending] = useState(false);\n  const [trendSearch, setTrendSearch] = useState(false);\n\n  async function fetchData(title) {\n    const URL = `https://api.giphy.com/v1/gifs/search?q=${title}&api_key=${process.env.REACT_APP_API_KEY}&limit=${limit}&offset=${offset}`;\n\n    const fetchGif = await axios(URL);\n\n    if (fetchGif.status === 200) {\n      setData(fetchGif.data.data);\n      setTotalCount(fetchGif.data.pagination.total);\n      setLoader(false);\n      if (trending) {\n        setTrending(false);\n        setOffset(0);\n      }\n      setTrendSearch(false);\n    }\n  }\n\n  useEffect(() => {\n    if (trending) {\n      fetchTrending(\n        limit,\n        offset,\n        setOffset,\n        setTrending,\n        setData,\n        setLoader,\n        setTotalCount,\n        content,\n        setTrendSearch,\n        title,\n        setTitle\n      );\n    }\n    if (!trending) {\n      fetchData(title);\n    }\n  }, [offset]);\n\n  const onTop = () => {\n    let options = { top: 0, left: 0, behavior: 'smooth' };\n    window.scrollTo(options);\n  };\n\n  const handleNext = () => {\n    setLoader(true);\n    setOffset(offset + limit);\n    onTop();\n  };\n\n  const handlePrev = () => {\n    setLoader(true);\n    setOffset(offset - limit);\n    onTop();\n  };\n\n  const handleDownload = (url) => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'blob';\n    xhr.onload = function () {\n      let urlCreator = window.URL || window.webkitURL;\n      let imageUrl = urlCreator.createObjectURL(this.response);\n      let tag = document.createElement('a');\n      tag.href = imageUrl;\n      tag.download = title.charAt(0).toUpperCase() + title.slice(1);\n      document.body.appendChild(tag);\n      tag.click();\n      document.body.removeChild(tag);\n    };\n    xhr.send();\n  };\n\n  const content = () => {\n    switch (true) {\n      case loader:\n        return <div>Loading...</div>;\n      case data.length > 0:\n        return data.map((g, index) => {\n          return (\n            <div className='gif-card' key={g.id}>\n              <img\n                onClick={() => handleDownload(g.images.fixed_height.url)}\n                className='image'\n                src={g.images.fixed_width.url}\n                alt='gif'\n              />\n            </div>\n          );\n        });\n      default:\n        return data;\n    }\n  };\n\n  return (\n    <div>\n      <header>\n        <a href='/catalog' style={{ textDecoration: 'none' }}>\n          <h1 className='gif-title-h1'> Gif Search</h1>\n        </a>\n        <div style={{ color: 'white' }}>\n          <strong>Search ==> </strong> {title}\n        </div>\n        <Search search={search} setSearch={setSearch} fetchData={fetchData} setTitle={setTitle} />\n        <a href='/catalog'>\n          <img className='svg' src={Reset} alt='reset' />\n        </a>\n      </header>\n      <button\n        className='gif-btn-trending'\n        onClick={() =>\n          fetchTrending(\n            limit,\n            offset,\n            setOffset,\n            setTrending,\n            setData,\n            setLoader,\n            setTotalCount,\n            content,\n            setTrendSearch,\n            title,\n            setTitle\n          )\n        }\n      >\n        Trending\n      </button>\n      <div className='gif-wrap'>{content()}</div>\n      <div className='pagination'>\n        {totalCount === 0 ? (\n          ''\n        ) : offset < limit ? (\n          <img onClick={handleNext} className='svg' src={Right} alt='right' />\n        ) : offset >= totalCount ? (\n          <img onClick={handlePrev} className='svg' src={Left} alt='left' />\n        ) : (\n          <div>\n            <img onClick={handlePrev} className='svg' src={Left} alt='left' />\n            <img onClick={handleNext} className='svg' src={Right} alt='right' />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Gif;\n","import Gif from './GIF';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Gif />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}